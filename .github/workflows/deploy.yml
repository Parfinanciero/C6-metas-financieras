name: Java CI with Maven
on:
  push:
    branches: [ "main", "feature/github_action" ]
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and test with Maven
        run: |
          mvn clean package -DskipTests
          ls -l target/*.jar  # Verifica que el JAR se genere correctamente

      - name: Initialize SSH and Trust Host
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Setting up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_KEY }}

      - name: Deploy to VPS
        run: |
          set -e  # Detener el script si algún comando falla

          echo "Creando directorio de logs (si no existe)..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "mkdir -p /var/www/C6-metas-financieras/logs"

          echo "Matando proceso anterior (si existe)..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "\
          PID=\$(pgrep -f goals-0.0.1-SNAPSHOT.jar) && echo \"PID encontrado: \$PID\" || echo 'No se encontró el proceso para matar' \
          "

          echo "Copiando el nuevo JAR..."
          scp -P ${{ secrets.SERVER_PORT }} target/goals-0.0.1-SNAPSHOT.jar ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/var/www/C6-metas-financieras/

          echo "Verificando que el JAR se copió correctamente..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "ls -l /var/www/C6-metas-financieras"

          echo "Dando permisos de ejecución al JAR..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "chmod +x /var/www/C6-metas-financieras/goals-0.0.1-SNAPSHOT.jar"

          echo "Verificando si Java está disponible..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "java -version"

          echo "Cargando variables de entorno desde el secreto ENV_FILES..."
          echo "${{ secrets.ENV_FILES }}" > /tmp/env_file

          # Cargar las variables de entorno
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "\
            echo '${{ secrets.ENV_FILES }}' > /tmp/env_file && \
            set -a && source /tmp/env_file && set +a && \
            nohup java -jar /var/www/C6-metas-financieras/goals-0.0.1-SNAPSHOT.jar > /var/www/C6-metas-financieras/logs/output.log 2>&1 & \
            echo 'Comando ejecutado' || echo 'Error al ejecutar el comando'"

          echo "Verificando que la aplicación se está ejecutando..."
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "pgrep -f goals-0.0.1-SNAPSHOT.jar || echo 'El proceso no se está ejecutando'"

          echo "Deploy completed"
